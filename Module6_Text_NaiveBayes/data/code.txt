"code: df1.corr()"
"code: np.unique(trips['dropoff_borough'])"
"code: sample_df.dropoff_datetime.unique()"
"code: print(trips.groupby('dropoff_borough').count())"
"code: samp[""is_daytime""] = (( (pd.to_datetime(trips[‘dropoff_datetime']).dt.hour) <16 ) & ((pd.to_datetime(trips[‘dropoff_datetime']).dt.hour) >4 ))"
"code: cabs_df['pickup_datetime']= pd.to_datetime(cabs_df['pickup_datetime'])"
"code: cabs_df['dropoff_zip_code'].replace(regex=True,inplace=True,to_replace=r'\D',value=r'')"
"code: sample_trips.groupby('dropoff_zip_code')['trip_distance', 'total_amount', 'tip_amount'].mean()"
"code: print ([min(sample.pickup_datetime), max(sample.pickup_datetime)])"
"code: trips_zip = trips_dropoff.groupby('dropoff_zip_code').count()"
"code: trips.sample(n=20).sort_values(by = 'dropoff_datetime')"
"code: dframe = dframe.replace({'\t': ''}, regex=True)"
"code: trips.describe()"
"code: import dateutil.parser dateutil.parser.parse(b).date()"
"code: trips.dropoff_borough.unique()"
"code: pd.to_datetime(sampleset[‘dropoff_datetime'], format='%Y-%m-%d %H:%M:%S')"
"code: smallset.sort_values(by='distance')"
"code:  pd.concat(trips).filter(like='dropoff')"
"code: trips.head(20).sort_values(['pickup_datetime','dropoff_datetime'])"
"code: smallset['dropoff_zip_cleaned'] = smallset.dropoff_zip_code.str[0:5]"
"code: trips.loc[np.random.choice(trips.index, 20, replace=False)]"
"code: trips.sample(20)"
"code: df2['_dropoff_zip_code']=pd.to_numeric(df2['dropoff_zip_code'])"
"code: print (sample.groupby('dropoff_borough').count())"
"code:  pd.value_counts(rando['dropoff_borough'])"
"code:  trips[['dropoff_borough']].drop_duplicates()"
"code:  df2['_dropoff_datetime']=pd.to_datetime(df2['dropoff_datetime'])"
"code:  df2['_dropoff_zip_code']=pd.to_numeric(df2['dropoff_zip_code'])"
"code:  df2['_day_of_week']=df2['_dropoff_datetime'].dt.weekday_name"
"code:  sample['dropoff_borough'].value_counts()"
"code:  sample[['dropoff_datetime', 'passenger_count']].groupby(lambda idx: idx.hour).agg(sum)"
